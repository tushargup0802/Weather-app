{"version":3,"sources":["images/bg.jpg","service/api.js","components/information.jsx","components/Form.jsx","components/Weather.jsx","App.js","reportWebVitals.js","index.js"],"names":["getData","city","country","a","axios","get","useStyles","makeStyles","component","margin","row","padding","fontSize","letterSpacing","value","color","icon","marginRight","Information","data","classes","Box","className","Typography","name","sys","main","temp","humidity","Date","sunrise","toLocaleTimeString","sunset","weather","clouds","all","background","input","button","width","height","marginTop","Form","useState","getWeatherData","setCity","setCountry","click","handleClick","useEffect","then","response","console","log","getWeather","TextField","inputProps","onChange","e","target","label","Button","variant","onClick","display","alignItems","leftContainer","backgroundImage","logo","backgroundSize","borderRadius","rightContainer","Weather","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06b2d758.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg.9c811a51.jpg\";","import axios from 'axios';\r\n\r\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\r\nconst API_KEY = 'a4a2066898ccc033c783f1f7e47a33dd';\r\n\r\nexport const getData = async(city,country) => {\r\n    return await axios.get(`${URL}?q=${city},${country}&appid=${API_KEY}&units=metric`)\r\n}","import { Box, Typography, makeStyles } from '@material-ui/core';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport SettingsBrightnessIcon from '@material-ui/icons/SettingsBrightness';\r\nimport OpacityIcon from '@material-ui/icons/Opacity';\r\nimport Brightness5Icon from '@material-ui/icons/Brightness5';\r\nimport Brightness6Icon from '@material-ui/icons/Brightness6';\r\nimport DehazeIcon from '@material-ui/icons/Dehaze';\r\nimport CloudIcon from '@material-ui/icons/Cloud';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    component:{\r\n     margin: 50\r\n    },\r\n    row:{\r\n      padding: 10,\r\n      fontSize:20,\r\n      letterSpacing:2\r\n    },\r\n    value:{\r\n        color:'white'\r\n    },\r\n    icon:{\r\n        marginRight:15,\r\n        color:'darkred'\r\n    }\r\n})\r\n\r\nconst Information  = ({ data }) =>{\r\n    const classes = useStyles();\r\n    return (\r\n        data ?\r\n        <Box className = {classes.component}>\r\n           <Typography className={classes.row}><LocationOnIcon className = {classes.icon}/>Location <Box className = {classes.value} component = \"span\">{data.name}, {data.sys.country}</Box></Typography>\r\n           <Typography className={classes.row}><SettingsBrightnessIcon className = {classes.icon}/>Temperature <Box className = {classes.value} component = \"span\">{data.main.temp} Â°C</Box></Typography>\r\n           <Typography className={classes.row}><OpacityIcon className = {classes.icon}/>Humidity <Box className = {classes.value} component = \"span\">{data.main.humidity}</Box></Typography>\r\n           <Typography className={classes.row}><Brightness5Icon className = {classes.icon}/>Sun Rise <Box className = {classes.value} component = \"span\">{new Date(data.sys.sunrise * 1000).toLocaleTimeString()}</Box></Typography> {/* *1000 = Converting Unix time into IST(PM-AM) */}\r\n           <Typography className={classes.row}><Brightness6Icon className = {classes.icon}/>Sun Set <Box className = {classes.value} component = \"span\">{new Date(data.sys.sunset * 1000).toLocaleTimeString()}</Box></Typography>    {/* *1000 = Converting Unix time into IST(PM-AM) */}\r\n           <Typography className={classes.row}><DehazeIcon className = {classes.icon}/>Condition <Box className = {classes.value} component = \"span\">{data.weather[0].main}</Box></Typography>\r\n           <Typography className={classes.row}><CloudIcon className = {classes.icon}/>Clouds <Box className = {classes.value} component = \"span\">{data.clouds.all} %</Box></Typography>\r\n\r\n        </Box> : ''\r\n    )\r\n}\r\n\r\nexport default Information;","import { Box, Button, makeStyles, TextField } from \"@material-ui/core\"\r\nimport { useEffect, useState } from \"react\";\r\nimport { getData }  from '../service/api';\r\nimport Information from './information';\r\n\r\nconst useStyles = makeStyles ({\r\n    component:{\r\n    padding: 10,\r\n    background: '#01579b',\r\n\r\n    \r\n    },\r\n    input: {\r\n        color:'white',\r\n        marginRight: 15\r\n    },\r\n    button:{\r\n        width:150,\r\n        height: 40,\r\n        background: '#e67e22',\r\n        color:'white',\r\n        marginTop: 5\r\n    }\r\n})\r\n\r\n\r\nconst Form = () => {\r\n    const classes = useStyles();\r\n    const [data, getWeatherData] = useState();\r\n    const [city,setCity] = useState('');\r\n    const [country,setCountry] = useState('');\r\n    const [click, handleClick] = useState(false);\r\n\r\n\r\n    useEffect(() =>{\r\n        const getWeather = async()=>{\r\n          city && await getData(city,country).then(response => {\r\n           getWeatherData(response.data);\r\n           console.log(response.data)\r\n           })\r\n        }\r\n     getWeather();\r\n     handleClick(false);\r\n    }, [click]);\r\n\r\n    const handleCityChange = (value) => {\r\n        setCity(value);\r\n    }\r\n\r\n    \r\n    const handleCountryChange = (value) => {\r\n        setCountry(value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Box className={classes.component}>\r\n            <TextField \r\n            inputProps = {{className: classes.input}}\r\n            onChange = {(e)=> handleCityChange(e.target.value)}\r\n              label = \"CITY\"         \r\n            className= {classes.input}\r\n            />\r\n            <TextField \r\n            inputProps = {{className: classes.input}}\r\n            onChange = {(e)=> handleCountryChange(e.target.value)}\r\n              label = \"COUNTRY\"       \r\n              className= {classes.input}     \r\n            />\r\n            <Button\r\n             variant = \"contained\"\r\n             className={classes.button}\r\n             onClick = {() => handleClick(true)}\r\n            >Get Weather</Button>\r\n        </Box>\r\n        <Information data ={data}  />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Form;","import  { Box, makeStyles } from '@material-ui/core';\r\nimport logo from '../images/bg.jpg';\r\nimport Form from './Form';\r\n\r\nconst useStyles = makeStyles ({\r\n    component: {\r\n       height: '100vh',\r\n       display: 'flex',\r\n       alignItems: 'center',\r\n       width: '65%',\r\n       margin: '0 auto'\r\n    },\r\n\r\n    leftContainer: {\r\n      backgroundImage: `url(${logo})`,\r\n      height: '80%',\r\n      width: '30%',\r\n      backgroundSize: 'cover',\r\n      borderRadius: '20px 0 0 20px'\r\n    },\r\n\r\n    rightContainer: {\r\n      background: 'linear-gradient(to right, #e74c3c,#e67e22)',\r\n      height: '80%',\r\n      width:'70%'\r\n    }\r\n})\r\n\r\nconst Weather = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.component}>\r\n             <Box className = {classes.leftContainer}></Box>          {/* for left part */}\r\n             <Box className = {classes.rightContainer}>\r\n                 <Form />\r\n                 </Box>         \r\n        </Box>\r\n    )\r\n}\r\nexport default Weather;","import Weather from './components/Weather';\n\n\nfunction App() {\n  return (\n    <Weather />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}